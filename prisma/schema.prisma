// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  company   Company?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Worker {
  id        String   @id @default(uuid())
  username  String
  password  String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id        String    @id @default(uuid())
  name      String
  logo      String?
  user      User      @relation(fields: [userEmail], references: [email])
  userEmail String    @unique
  quality   Quality[]
  mill      Mill[]
  worker    Worker[]
  client    Client[]
  stock     Stock[]
  order     Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Mill {
  id        String    @id @default(uuid())
  name      String    @unique
  quality   Quality[]
  company   Company   @relation(fields: [companyId], references: [id])
  companyId String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Quality {
  id        String   @id @default(uuid())
  name      String   @unique
  mill      Mill     @relation(fields: [millName], references: [name])
  millName  String
  stock     Stock[]
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stock {
  id          String   @id @default(uuid())
  quality     Quality  @relation(fields: [qualityName], references: [name])
  qualityName String
  breadth     Float
  length      Float?
  weight      Float
  gsm         Int
  sheets      Int
  quantity    Int
  bundle      Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  order       Order[]
  companyId   String
  company     Company  @relation(fields: [companyId], references: [id])
}

model Order {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  stock           Stock    @relation(fields: [stockId], references: [id])
  stockId         String   @unique
  quantity        Int
  status          String
  clientId        String
  client          Client   @relation(fields: [clientId], references: [id])
  companyId       String
  company         Company  @relation(fields: [companyId], references: [id])
  billingAddress  String
  shippingAddress String
}

model Client {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  address   String[]
  mobile    BigInt
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  email     String?
  gst       String?
  order     Order[]
}
